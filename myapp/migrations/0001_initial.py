# Generated by Django 5.1.7 on 2025-04-08 03:38

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Benefit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Company',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('website', models.URLField(blank=True)),
                ('logo', models.ImageField(blank=True, upload_to='company_logos/')),
                ('location', models.CharField(max_length=200)),
                ('industry', models.CharField(max_length=100)),
                ('founded_year', models.PositiveIntegerField(blank=True, null=True)),
                ('employee_count', models.PositiveIntegerField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Companies',
            },
        ),
        migrations.CreateModel(
            name='JobCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Job Categories',
            },
        ),
        migrations.CreateModel(
            name='JobPosting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('requirements', models.TextField()),
                ('job_type', models.CharField(choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('internship', 'Internship'), ('temporary', 'Temporary')], max_length=20)),
                ('experience_level', models.CharField(choices=[('entry', 'Entry Level'), ('mid', 'Mid Level'), ('senior', 'Senior Level'), ('executive', 'Executive Level')], max_length=20)),
                ('location', models.CharField(max_length=200)),
                ('salary_min', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('salary_max', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('application_deadline', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('applications_count', models.PositiveIntegerField(default=0)),
                ('cost_per_day', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('time_to_fill', models.DurationField(blank=True, null=True)),
                ('benefits', models.ManyToManyField(blank=True, to='myapp.benefit')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.jobcategory')),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_postings', to='myapp.company')),
            ],
        ),
        migrations.CreateModel(
            name='JobSeeker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('resume', models.FileField(blank=True, upload_to='resumes/')),
                ('experience_level', models.CharField(choices=[('entry', 'Entry Level'), ('mid', 'Mid Level'), ('senior', 'Senior Level'), ('executive', 'Executive Level')], max_length=20)),
                ('expected_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('location', models.CharField(max_length=200)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('is_available', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='myapp_jobseeker', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='JobAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('keywords', models.CharField(max_length=200)),
                ('job_type', models.CharField(blank=True, choices=[('full_time', 'Full Time'), ('part_time', 'Part Time'), ('contract', 'Contract'), ('internship', 'Internship'), ('temporary', 'Temporary')], max_length=20)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('min_salary', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('biweekly', 'Bi-Weekly'), ('monthly', 'Monthly')], max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('last_sent', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='myapp.jobcategory')),
                ('job_seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_alerts', to='myapp.jobseeker')),
            ],
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cover_letter', models.TextField()),
                ('resume', models.FileField(upload_to='application_resumes/')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewing', 'Reviewing'), ('shortlisted', 'Shortlisted'), ('interviewing', 'Interviewing'), ('offered', 'Offered'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], default='pending', max_length=20)),
                ('applied_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('match_score', models.FloatField(null=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='myapp.jobposting')),
                ('applicant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='applications', to='myapp.jobseeker')),
            ],
        ),
        migrations.CreateModel(
            name='JobViewLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_id', models.CharField(max_length=100)),
                ('source', models.CharField(blank=True, max_length=100)),
                ('viewed_at', models.DateTimeField(auto_now_add=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='view_logs', to='myapp.jobposting')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myapp_viewlogs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='SearchLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('query', models.CharField(max_length=200)),
                ('filters', models.JSONField(default=dict)),
                ('results_count', models.IntegerField()),
                ('searched_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='myapp_searchlogs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Skill',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='skills', to='myapp.jobcategory')),
            ],
        ),
        migrations.AddField(
            model_name='jobseeker',
            name='skills',
            field=models.ManyToManyField(to='myapp.skill'),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='preferred_skills',
            field=models.ManyToManyField(blank=True, related_name='preferred_for_jobs', to='myapp.skill'),
        ),
        migrations.AddField(
            model_name='jobposting',
            name='required_skills',
            field=models.ManyToManyField(related_name='required_for_jobs', to='myapp.skill'),
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(max_length=100)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.CharField(max_length=500)),
                ('start_time', models.DateTimeField(auto_now_add=True)),
                ('end_time', models.DateTimeField(null=True)),
                ('pages_viewed', models.IntegerField(default=0)),
                ('actions_performed', models.IntegerField(default=0)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myapp_sessions', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='AnalyticsReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('report_type', models.CharField(choices=[('user_engagement', 'User Engagement'), ('job_performance', 'Job Performance'), ('application_funnel', 'Application Funnel'), ('platform_metrics', 'Platform Metrics'), ('custom', 'Custom Report')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_generated', models.DateTimeField(null=True)),
                ('schedule_frequency', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('quarterly', 'Quarterly')], max_length=20, null=True)),
                ('parameters', models.JSONField(default=dict)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myapp_created_reports', to=settings.AUTH_USER_MODEL)),
                ('recipients', models.ManyToManyField(related_name='myapp_subscribed_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['report_type', 'created_at'], name='myapp_analy_report__026d01_idx'), models.Index(fields=['created_by', 'is_active'], name='myapp_analy_created_8ad8b7_idx')],
            },
        ),
        migrations.CreateModel(
            name='ApplicationStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('reviewing', 'Reviewing'), ('shortlisted', 'Shortlisted'), ('interviewing', 'Interviewing'), ('offered', 'Offered'), ('accepted', 'Accepted'), ('rejected', 'Rejected'), ('withdrawn', 'Withdrawn')], max_length=20)),
                ('changed_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='myapp.application')),
                ('changed_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Application Status Histories',
                'ordering': ['-changed_at'],
                'indexes': [models.Index(fields=['application'], name='myapp_appli_applica_efc477_idx'), models.Index(fields=['status'], name='myapp_appli_status_079a3c_idx'), models.Index(fields=['changed_at'], name='myapp_appli_changed_4e838f_idx')],
            },
        ),
        migrations.CreateModel(
            name='Employer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('job_title', models.CharField(max_length=100)),
                ('department', models.CharField(max_length=100)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('is_primary_contact', models.BooleanField(default=False)),
                ('can_post_jobs', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='employers', to='myapp.company')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='myapp_employer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user'], name='myapp_emplo_user_id_4ad790_idx'), models.Index(fields=['company'], name='myapp_emplo_company_b48eda_idx'), models.Index(fields=['is_primary_contact'], name='myapp_emplo_is_prim_3dcb8c_idx')],
            },
        ),
        migrations.CreateModel(
            name='JobMetrics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_views', models.PositiveIntegerField(default=0)),
                ('unique_views', models.PositiveIntegerField(default=0)),
                ('total_applications', models.PositiveIntegerField(default=0)),
                ('shortlisted_applications', models.PositiveIntegerField(default=0)),
                ('interviewed_applications', models.PositiveIntegerField(default=0)),
                ('offered_applications', models.PositiveIntegerField(default=0)),
                ('accepted_applications', models.PositiveIntegerField(default=0)),
                ('average_match_score', models.FloatField(blank=True, null=True)),
                ('time_to_first_application', models.DurationField(blank=True, null=True)),
                ('time_to_shortlist', models.DurationField(blank=True, null=True)),
                ('time_to_hire', models.DurationField(blank=True, null=True)),
                ('cost_per_application', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('cost_per_hire', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('job', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='metrics', to='myapp.jobposting')),
            ],
            options={
                'verbose_name_plural': 'Job Metrics',
                'indexes': [models.Index(fields=['job'], name='myapp_jobme_job_id_88faa2_idx'), models.Index(fields=['last_updated'], name='myapp_jobme_last_up_1900dc_idx')],
            },
        ),
        migrations.CreateModel(
            name='JobMatch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('match_score', models.FloatField()),
                ('skill_match', models.FloatField()),
                ('experience_match', models.FloatField()),
                ('salary_match', models.FloatField()),
                ('location_match', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='matches', to='myapp.jobposting')),
                ('jobseeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_matches', to='myapp.jobseeker')),
            ],
            options={
                'ordering': ['-match_score'],
                'indexes': [models.Index(fields=['job', 'match_score'], name='myapp_jobma_job_id_80a79f_idx'), models.Index(fields=['jobseeker', 'match_score'], name='myapp_jobma_jobseek_1866ae_idx')],
                'unique_together': {('job', 'jobseeker')},
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notification_type', models.CharField(choices=[('application_received', 'Application Received'), ('application_status_changed', 'Application Status Changed'), ('job_alert', 'Job Alert'), ('saved_search', 'Saved Search Match'), ('message', 'Message'), ('system', 'System Notification')], max_length=50)),
                ('title', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('data', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notifications', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user', 'is_read'], name='myapp_notif_user_id_da55a8_idx'), models.Index(fields=['created_at'], name='myapp_notif_created_92a5b3_idx')],
            },
        ),
        migrations.CreateModel(
            name='SavedJob',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('saved_at', models.DateTimeField(auto_now_add=True)),
                ('notes', models.TextField(blank=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_by', to='myapp.jobposting')),
                ('job_seeker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='saved_jobs', to='myapp.jobseeker')),
            ],
            options={
                'unique_together': {('job_seeker', 'job')},
            },
        ),
        migrations.CreateModel(
            name='SavedSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('query', models.CharField(max_length=200)),
                ('filters', models.JSONField(default=dict)),
                ('notification_frequency', models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('biweekly', 'Bi-Weekly'), ('monthly', 'Monthly')], max_length=20, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_notification_sent', models.DateTimeField(blank=True, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='myapp_saved_searches', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Saved Searches',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['user'], name='myapp_saved_user_id_0c3d27_idx'), models.Index(fields=['is_active'], name='myapp_saved_is_acti_a54c6a_idx'), models.Index(fields=['created_at'], name='myapp_saved_created_3d766e_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserAction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_type', models.CharField(choices=[('search', 'Search'), ('apply', 'Apply'), ('save', 'Save Job'), ('view', 'View Job'), ('download', 'Download'), ('share', 'Share')], max_length=20)),
                ('action_time', models.DateTimeField(auto_now_add=True)),
                ('action_data', models.JSONField(default=dict)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.usersession')),
            ],
            options={
                'indexes': [models.Index(fields=['action_type', 'action_time'], name='myapp_usera_action__9e7e37_idx')],
            },
        ),
        migrations.CreateModel(
            name='PageView',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_url', models.URLField()),
                ('view_time', models.DateTimeField(auto_now_add=True)),
                ('time_spent', models.DurationField(null=True)),
                ('referrer', models.URLField(null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.usersession')),
            ],
            options={
                'indexes': [models.Index(fields=['page_url', 'view_time'], name='myapp_pagev_page_ur_f0b057_idx')],
            },
        ),
    ]
